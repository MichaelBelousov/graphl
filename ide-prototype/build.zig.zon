.{
    // This is the default name used by packages depending on this one. For
    // example, when a user runs `zig fetch --save <url>`, this field is used
    // as the key in the `dependencies` table. Although the user can choose a
    // different name, most users will stick with this provided value.
    //
    // It is redundant to include "zig" in this name because it is already
    // within the Zig package namespace.
    .name = "dvui-frontend",

    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.0.0",

    // This field is optional.
    // This is currently advisory only; Zig does not yet do anything
    // with this value.
    //.minimum_zig_version = "0.11.0",

    // This field is optional.
    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // internet connectivity.
    .dependencies = .{
        .dvui = .{
            .url = "https://github.com/MichaelBelousov/dvui/archive/b9945b4f703fd8d48c5b2dbda8227a41cdec1974.zip",
            .hash = "122018c6375309e30875f736de210fe209ac37021227b69961056c8658398accc772",
        },
        .grappl_core = .{
            .path = "../lang-lib",
        },
        .@"binaryen-zig" = .{
            .url = "https://github.com/MichaelBelousov/binaryen-zig/archive/e45439568f1288ed829ceb9e64c6c88e5eb57433.zip",
            .hash = "122045044f48eab9c93477f9fec402d8e3c2eb7d59b49d3bd11ccc9dc6bd60db12d7",
        },
    },
    .paths = .{
        "build.zig",
        "build.zig.zon",
        "src",
        // For example...
        //"LICENSE",
        //"README.md",
    },
}
