.{
    // This is the default name used by packages depending on this one. For
    // example, when a user runs `zig fetch --save <url>`, this field is used
    // as the key in the `dependencies` table. Although the user can choose a
    // different name, most users will stick with this provided value.
    //
    // It is redundant to include "zig" in this name because it is already
    // within the Zig package namespace.
    .name = "dvui-frontend",

    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.0.0",

    // This field is optional.
    // This is currently advisory only; Zig does not yet do anything
    // with this value.
    //.minimum_zig_version = "0.11.0",

    // This field is optional.
    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // internet connectivity.
    .dependencies = .{
        .dvui = .{
            //.url = "https://github.com/MichaelBelousov/dvui/archive/05e1c85df71993948a5c6a54bb6cac236bf2ee1c.zip",
            //.hash = "12209a94b7959c71e5e49099d2f617f920cccb4b153fd5898dead387c3ad81ddc46b",
            .path = "../../dvui",
        },
        .@"binaryen-zig" = .{
            //.url = "https://github.com/MichaelBelousov/binaryen-zig/archive/7ae386348c28d80b7c8db18d18e64eb14a7ba4e4.zip",
            //.hash = "12200b1104cadb8e9298362b9e8f3545688670c028e2a1b92ddcaa6812760863e50d",
            .path = "../../binaryen-zig",
        },
        .grappl_core = .{
            .path = "../lang-lib",
        },
    },
    .paths = .{
        "build.zig",
        "build.zig.zon",
        "src",
        // For example...
        //"LICENSE",
        //"README.md",
    },
}
